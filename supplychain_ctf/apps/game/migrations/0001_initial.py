# Generated by Django 3.0.5 on 2020-07-16 03:42

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('total_days', models.IntegerField(default=1, help_text='The total number of days that the game takes place')),
            ],
        ),
        migrations.CreateModel(
            name='GameState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days_left', models.IntegerField(default=0, help_text='Number of game days left. This is the global time for the entire game stateAll time in state objects is defined in number of days left(e.g. a lower number is AFTER a higher number)')),
                ('score', models.IntegerField(default=0, help_text='The score for this game')),
                ('started', models.BooleanField(default=False, help_text='Has the game started yet?')),
                ('finished', models.BooleanField(default=False, help_text='Is the game finished?')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Game')),
            ],
        ),
        migrations.CreateModel(
            name='Mitigation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mitigation_name', models.CharField(max_length=20)),
                ('cost', models.IntegerField(default=1, help_text='The cost to apply this mitigation')),
                ('downtime_days', models.IntegerField(default=1, help_text='The amount of downtime to apply')),
            ],
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('score_per_day', models.IntegerField(default=0, help_text='Amount of score this will generate per day if active')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('tag_name', models.CharField(max_length=64, primary_key=True, serialize=False)),
                ('visible', models.BooleanField(default=True, help_text='Should the user be able to see this tag?')),
            ],
        ),
        migrations.CreateModel(
            name='Vendor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('tags', models.ManyToManyField(to='game.Tag')),
            ],
        ),
        migrations.CreateModel(
            name='SystemState',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('procured', models.BooleanField(default=False)),
                ('downtime', models.IntegerField(default=0, help_text='How many days of downtime left? if this value is <= 0 it means the system is operational')),
                ('active_tags', models.ManyToManyField(to='game.Tag')),
                ('chosen_vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Vendor')),
                ('game_state', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.GameState')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.System')),
            ],
        ),
        migrations.CreateModel(
            name='SystemDependency',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_tag', models.ForeignKey(help_text='In order to purchase this system you must have this tag', on_delete=django.db.models.deletion.CASCADE, to='game.Tag')),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.System')),
            ],
        ),
        migrations.AddField(
            model_name='system',
            name='tags',
            field=models.ManyToManyField(to='game.Tag'),
        ),
        migrations.AddField(
            model_name='system',
            name='vendors',
            field=models.ManyToManyField(to='game.Vendor'),
        ),
        migrations.CreateModel(
            name='PlayerInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MitigationApplied',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('applied_on', models.IntegerField(default=-1, help_text='How many days were left when this was applied')),
                ('mitigation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Mitigation')),
            ],
        ),
        migrations.AddField(
            model_name='mitigation',
            name='adds_tags',
            field=models.ManyToManyField(help_text='The mitigation adds the following tags', related_name='added_by_mitigations', to='game.Tag'),
        ),
        migrations.AddField(
            model_name='mitigation',
            name='removes_tags',
            field=models.ManyToManyField(help_text='The mitigation removes the following tags', related_name='removed_by_mitigations', to='game.Tag'),
        ),
        migrations.AddField(
            model_name='mitigation',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.System'),
        ),
        migrations.AddField(
            model_name='gamestate',
            name='player',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.PlayerInfo'),
        ),
        migrations.AddField(
            model_name='game',
            name='systems',
            field=models.ManyToManyField(to='game.System'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('at_day', models.IntegerField(help_text='happens at this many days left')),
                ('downtime', models.IntegerField(default=0, help_text='Downtime caused by this event')),
                ('score', models.IntegerField(default=0, help_text='Cost of this event. Positive means gain in score, negative means drop in score')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='game.Game')),
                ('tags', models.ManyToManyField(to='game.Tag')),
            ],
        ),
    ]
